@model Exam.Models.MCQquestion

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MCQquestion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Chapter.Subject.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DisplayFor(model => model.Chapter.Subject.name)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.optoin2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.optoin2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.optoin2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.correct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("correct", ViewData["options"] as List<SelectListItem>, htmlAttributes: new { @class = "control-label col-md-2" })

                @*  @Html.EditorFor(model => model.correct, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.correct, "", new { @class = "text-danger" })
                *@

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.def_level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("def_level", ViewData["list_def"] as List<SelectListItem>, htmlAttributes: new { @class = "control-label col-md-2" })

                @*
                     @Html.EditorFor(model => model.def_level, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.def_level, "", new { @class = "text-danger" })
                *@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CH_id, "CH_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CH_id, ViewBag.CH_id as List<SelectListItem> , htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CH_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.HiddenFor(model => model.MQ_id)
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
