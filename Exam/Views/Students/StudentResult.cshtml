@model IEnumerable<Exam.Models.Result>
@{
    ViewBag.Title = "StudentResult";
    Layout = "~/Views/Shared/_Layout_student.cshtml";
}


@using (Html.BeginForm("Create", "Results"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Enroll your Subjects</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*       <div class="form-group">
            @Html.LabelFor(model => model.ST_id, "ST_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ST_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ST_id, "", new { @class = "text-danger" })
            </div>
            </div>
        *@

        <div class="form-group">
            @*       @Html.LabelFor(model => model.S_id, "S_id", htmlAttributes: new { @class = "control-label col-md-2" })
            *@       <div class="col-md-10">
                @Html.DropDownList("S_id", null, htmlAttributes: new { @class = "form-control" })
                @*       @Html.ValidationMessageFor(model => model.S_id, "", new { @class = "text-danger" })
                *@
            </div>
        </div>
        @*
            <div class="form-group">
                @Html.LabelFor(model => model.result1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.result1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.result1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.grade, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.grade, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.grade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.S_GPA, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.S_GPA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.S_GPA, "", new { @class = "text-danger" })
                </div>
            </div>
        *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enroll" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<h2>StudentResult</h2>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Subject.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.result1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.grade)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.S_GPA)
        </th>
 @*       <th>
        @Html.DisplayNameFor(model => model.Student.name)
    </th>
*@     
        <th>
            @Html.DisplayNameFor(model => model.Subject.hours)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Subject.name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.result1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.grade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.S_GPA)
            </td>
 @*           <td>
        @Html.DisplayFor(modelItem => item.Student.name)
    </td>
*@         
            <td>
                @Html.DisplayFor(modelItem => item.Subject.hours)
            </td>
             
        </tr>
    }

</table>


